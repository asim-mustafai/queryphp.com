(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{373:function(t,a,n){"use strict";n.r(a);var s=n(12),e=Object(s.a)({},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"查询语言-sql"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#查询语言-sql","aria-hidden":"true"}},[t._v("#")]),t._v(" 查询语言.sql")]),t._v(" "),n("h2",{attrs:{id:"函数原型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数原型","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数原型")]),t._v(" "),n("p",[t._v("本功能特别适合用于调试 SQL，大家可以这样子用。")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sql")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$bFlag")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"用法如下"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#用法如下","aria-hidden":"true"}},[t._v("#")]),t._v(" 用法如下")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\nArray\n(\n    [0] => SELECT `test`.* FROM `test` ORDER BY `test`.`create_at` DESC LIMIT 1 \n    [1] => Array\n        (\n        )\n\n    [2] => \n    [3] => 5\n    [4] => \n    [5] => Array\n        (\n        )\n)\n*/")]),t._v("\nDb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("table")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'test'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sql")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("latest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOne")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\nArray\n(\n    [0] => delete from test where id = ?\n    [1] => Array\n        (\n            [0] => 22\n        )\n)\n*/")]),t._v("\nDb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sql")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'delete from test where id = ?'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等效")]),t._v("\nDb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'delete from test where id = ?'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h1",{attrs:{id:"例外-getone-等也支持快捷"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例外-getone-等也支持快捷","aria-hidden":"true"}},[t._v("#")]),t._v(" 例外 getOne 等也支持快捷")]),t._v(" "),n("div",{staticClass:"language-php extra-class"},[n("pre",{pre:!0,attrs:{class:"language-php"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\nArray\n(\n    [0] => SELECT `test`.* FROM `test` ORDER BY `test`.`create_at` DESC LIMIT 1 \n    [1] => Array\n        (\n        )\n\n    [2] => \n    [3] => 5\n    [4] => \n    [5] => Array\n        (\n        )\n\n)\n*/")]),t._v("\nDb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("table")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token single-quoted-string string"}},[t._v("'test'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("latest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOne")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\npublic function select($strData, $arrBind = [], $bFlag = false);\npublic function insert($mixData, $arrBind = [], $booReplace = false, $bFlag = false);\npublic function insertAll($arrData, $arrBind = [], $booReplace = false, $bFlag = false);\npublic function update($mixData, $arrBind = [], $bFlag = false);\npublic function updateColumn($strColumn, $mixValue, $arrBind = [], $bFlag = false);\npublic function updateIncrease($strColumn, $intStep = 1, $arrBind = [], $bFlag = false);\npublic function updateDecrease($strColumn, $intStep = 1, $arrBind = [], $bFlag = false);\npublic function delete($mixData = null, $arrBind = [], $bFlag = false);\npublic function truncate($bFlag = false);\npublic function statement($strData, $arrBind = [], $bFlag = false);\npublic function getOne($bFlag = false);\npublic function getAll($bFlag = false);\npublic function get($nNum = null, $bFlag = false);\npublic function value($strField, $bFlag = false);\npublic function lists($mixFieldValue, $strFieldKey = null, $bFlag = false);\npublic function getCount($strField = '*', $sAlias = 'row_count', $bFlag = false);\npublic function getAvg($strField, $sAlias = 'avg_value', $bFlag = false);\npublic function getMax($strField, $sAlias = 'max_value', $bFlag = false);\npublic function getMin($strField, $sAlias = 'min_value', $bFlag = false);\npublic function getSum($strField, $sAlias = 'sum_value', $bFlag = false);\n*/")]),t._v("\n")])])])])},[],!1,null,null,null);a.default=e.exports}}]);